schema {
  query: Query
  mutation: Mutation
}

type Query {
  posts(limit: Int!, cursor: String): PostsConnection!

  post(id: ID!): Post!

  postComments(
    postId: ID!
    limit: Int!
    cursor: String
  ): PostCommentsConnection!

  commentReplies(
    commentId: ID!
    limit: Int!
    cursor: String
  ): CommentRepliesConnection!
}

type Mutation {
  createPost(post: PostInput!): Post!
  deletePost(id: ID!): Post!

  upVotePost(id: ID!): Post!
  downVotePost(id: ID!): Post!

  commentPost(id: ID!, comment: CommentInput!): PostComment!
  replyComment(id: ID!, comment: ReplyInput!): CommentReply!
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: String!
  upVotes: Int!
  downVotes: Int!
}

input PostInput {
  title: String!
  content: String!
  author: String!
}

type PostsConnection {
  cursor: String
  posts: [Post!]!
}

# -------------- #

input CommentInput {
  content: String!
}

interface Comment {
  id: ID!
  content: String!
}

type PostComment implements Comment {
  id: ID!
  content: String!

  postId: ID!
}

type PostCommentsConnection {
  cursor: String
  comments: [Comment!]!
}

# -------------- #

input ReplyInput {
  content: String!
}

type CommentReply implements Comment {
  id: ID!
  content: String!

  commentId: ID!
  # postId: ID!
}

type CommentRepliesConnection {
  cursor: String
  replies: [Comment!]!
}

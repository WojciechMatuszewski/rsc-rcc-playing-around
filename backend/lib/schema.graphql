schema {
  query: Query
  mutation: Mutation
}

type Query {
  posts(limit: Int!, cursor: String): PostsConnection!
  post(id: ID!): Post!

  postComments(postId: ID!, limit: Int!, cursor: String): CommentsConnection!
  commentReplies(commentId: ID!, limit: Int!, cursor: String): ReplyConnection!
}

type Mutation {
  createPost(post: PostInput!): Post!
  deletePost(id: ID!): Post!

  upVotePost(id: ID!): Post!
  downVotePost(id: ID!): Post!

  commentPost(id: ID!, comment: CommentInput!): Comment!
  replyComment(id: ID!, comment: ReplyInput!): Reply!
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: String!
  upVotes: Int!
  downVotes: Int!
}

input PostInput {
  title: String!
  content: String!
  author: String!
}

type PostsConnection {
  cursor: String
  posts: [Post!]!
}

input CommentInput {
  content: String!
}

type Comment {
  id: ID!
  postId: ID!
  content: String!
}

type CommentsConnection {
  cursor: String
  comments: [Comment!]!
}

input ReplyInput {
  content: String!
}

type Reply {
  id: ID!
  commentId: ID!
  # postId: ID!
  content: String!
}

type ReplyConnection {
  cursor: String
  replies: [Reply!]!
}
